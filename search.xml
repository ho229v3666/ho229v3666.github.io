<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Qt爬虫</title>
    <url>/2020/02/28/Qt%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<ul>
<li>最近学习了Qt，便想用Qt写个爬虫小demo。</li>
<li>我使用的是Qt 5.12。</li>
</ul>
<hr>
<p>这个爬虫项目的实现一共分三个部分:</p>
<ol>
<li><a href="#获取网页HTML源码。">获取网页HTML源码</a></li>
<li><a href="#解析HTML源码并提取出有用信息">解析HTML源码并提取出有用信息</a></li>
<li><a href="#下载图片">下载图片</a></li>
</ol>
<hr>
<h3 id="获取网页HTML源码"><a href="#获取网页HTML源码" class="headerlink" title="获取网页HTML源码"></a>获取网页HTML源码</h3><ul>
<li>先利用 <code>QNetworkRequest</code> 网络请求类构建请求，再利用 <code>QNetworkAccessManager</code> 发送网络请求。当网络请求被回复后，会发出一个 <code>void QNetworkAccessManager::finished(QNetworkReply *reply)</code> 的信号，所以我们把这个信号连接到槽 <code>replyFinished(QNetworkReply *)</code> 来处理这个信号。</li>
</ul>
<p>代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::getMyDiliUserInfo</span><span class="params">(<span class="keyword">const</span> QUrl url)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QNetworkAccessManager *manager = <span class="keyword">new</span> QNetworkAccessManager(<span class="keyword">this</span>);</span><br><span class="line">    <span class="function">QNetworkRequest <span class="title">request</span><span class="params">(url)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置Headers的信息</span></span><br><span class="line">    request.setRawHeader(<span class="string">"User-Agent"</span>, <span class="string">"MyOwnBrowser 1.0"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(manager,SIGNAL(finished(QNetworkReply *)),<span class="keyword">this</span>,</span><br><span class="line">            SLOT(replyFinished(QNetworkReply *)));</span><br><span class="line"></span><br><span class="line">    manager-&gt;<span class="built_in">get</span>(request);  <span class="comment">// 发送请求</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="解析HTML源码并提取出有用信息"><a href="#解析HTML源码并提取出有用信息" class="headerlink" title="解析HTML源码并提取出有用信息"></a>解析HTML源码并提取出有用信息</h3><ul>
<li>解析HTML最好用的是专门的HTML解析库，由于这个是简易爬虫，所以说我用了Qt5的 <code>QRegularExpression</code> 正则表达式类来解析HTML。</li>
</ul>
<p>代码如下:</p>
<ul>
<li>获取全部URL<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::getAllUrls</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QRegularExpression <span class="title">re</span><span class="params">(<span class="string">"(https?|ftp|file)://[-A-Za-z0-9+&amp;@#/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#/%=~_|]"</span>)</span></span>;</span><br><span class="line">    QRegularExpressionMatchIterator i=re.globalMatch(HtmlResponse);</span><br><span class="line">    <span class="keyword">while</span> (i.hasNext())</span><br><span class="line">        allUrls.push_back(i.next().captured(<span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>获取图片URL（由于正则表达式只能找出&lt;img&gt;的图片URL，所以可能效果不会很理想）<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::getImageUrls</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QRegularExpression <span class="title">re</span><span class="params">(<span class="string">"&lt;img.*?src=\"(?&lt;url&gt;(.*?))\""</span>)</span></span>;</span><br><span class="line">    QRegularExpressionMatchIterator i=re.globalMatch(HtmlResponse);</span><br><span class="line">    <span class="keyword">while</span> (i.hasNext())</span><br><span class="line">        imageUrls.push_back(i.next().captured(<span class="string">"url"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h3 id="下载图片"><a href="#下载图片" class="headerlink" title="下载图片"></a>下载图片</h3><ul>
<li>这里和获取网页HTML源码的步骤差不多，唯一不同的是用 <code>QEventLoop</code> 开启一个局部的事件循环,等待响应结束。当 <code>void QNetworkAccessManager::finished(QNetworkReply *reply)</code> 信号发送给 <code>void QEventLoop::quit()</code> 时退出事件循环。</li>
</ul>
<p>代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::downlodaImage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">/* 判断路径是否存在 */</span></span><br><span class="line">    <span class="function">QDir <span class="title">imageDir</span><span class="params">(<span class="string">"./image"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!imageDir.<span class="built_in">exists</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!imageDir.mkpath(<span class="string">"./"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::critical(<span class="keyword">this</span>,<span class="string">"错误"</span>,<span class="string">"文件夹创建失败"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 遍历 URL 下载图片 */</span></span><br><span class="line">    <span class="keyword">for</span>(QUrl &amp;imageUrl:imageUrls)</span><br><span class="line">    &#123;</span><br><span class="line">        QNetworkAccessManager manager;</span><br><span class="line">        <span class="function">QNetworkRequest <span class="title">request</span><span class="params">(imageUrl)</span></span>;</span><br><span class="line"></span><br><span class="line">        QNetworkReply *reply = manager.<span class="built_in">get</span>(request);    <span class="comment">// 发送请求</span></span><br><span class="line">        <span class="comment">//开启一个局部的事件循环,等待响应结束，退出</span></span><br><span class="line">        QEventLoop loop;</span><br><span class="line">        <span class="built_in">connect</span>(reply, SIGNAL(finished()), &amp;loop, SLOT(quit()));</span><br><span class="line">        loop.exec();</span><br><span class="line">        <span class="comment">//判断是否出错,出错则结束</span></span><br><span class="line">        <span class="keyword">if</span> (reply-&gt;error() != QNetworkReply::NoError)</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::critical(<span class="keyword">this</span>,imageUrl.toString(),</span><br><span class="line">                QString(<span class="string">"下载失败:%1"</span>).arg(reply-&gt;errorString()));</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保存文件</span></span><br><span class="line">        <span class="function">QFile <span class="title">file</span><span class="params">(QString(<span class="string">"./image/image_%1.%2"</span>).arg(i)</span></span></span><br><span class="line"><span class="function"><span class="params">                   .arg(imageUrl.toString().split(<span class="string">'.'</span>).last()))</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(!file.<span class="built_in">open</span>(QIODevice::WriteOnly))</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::critical(<span class="keyword">this</span>,file.fileName(),</span><br><span class="line">                QString(<span class="string">"图片保存失败:%1"</span>).arg(file.errorString()));</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        file.<span class="built_in">write</span>(reply-&gt;readAll());</span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line">        reply-&gt;deleteLater();</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ui-&gt;DownloadBtn-&gt;setText(<span class="string">"下载图片"</span>);</span><br><span class="line">    ui-&gt;DownloadBtn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    ui-&gt;StartBtn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    QMessageBox::information(<span class="keyword">this</span>,<span class="string">"提示"</span>,<span class="string">"图片下载完成"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWidget::on_StartBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;UrlLineEdit-&gt;<span class="built_in">text</span>().isEmpty())</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,<span class="string">"错误"</span>,<span class="string">"请输入URL地址"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>-&gt;getMyDiliUserInfo(ui-&gt;UrlLineEdit-&gt;<span class="built_in">text</span>());</span><br><span class="line">    ui-&gt;StartBtn-&gt;setText(<span class="string">"正在抓取..."</span>);</span><br><span class="line">    ui-&gt;StartBtn-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<center>文章到此就结束了，感谢阅读</center>
<center>项目源码:https://github.com/ho229v3666/Qt-Reptile</center>
]]></content>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/27/hello-world/</url>
    <content><![CDATA[<center>这是我的第一篇博客，纪念这一天 2020/2/27。</center>]]></content>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
</search>
